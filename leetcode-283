/*
283. Move Zeroes (Easy)

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]
 
Constraints:
1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1

question asked by companies: Google, Facebook, Amazon, Apple, Netflix.

time complexity: O(n)
Runtime: 0ms
Beats: 100.00%

space complexity: O(1)
Memory: 21.77MB
Beats: 89.52%

code:
*/

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n = nums.size();
        if(n == 0 || n == 1) return;
        int lzf = 0;
        for(int i=0; i<n; i++){
            if(nums[i] != 0){
                nums[lzf] = nums[i];
                lzf++; 
            }
        }
        for(int i=lzf; i<n; i++){
            nums[i] = 0;
        }
    }
};
